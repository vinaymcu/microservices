<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.acn.avs</groupId>
		<artifactId>business-services</artifactId>
		<version>1.0</version>
	</parent>
	<artifactId>push-messaging-service</artifactId>
	<properties>
		<testng.version>6.8.7</testng.version>
		<skipTests>true</skipTests>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.language>java</sonar.language>
		<sonar.java.source>1.8</sonar.java.source>
		<sonar.dynamicAnalysis>true</sonar.dynamicAnalysis>
		<sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<!-- Jacoco version to use -->
		<jacoco.version>0.7.2.201409121644</jacoco.version>
		<!-- The Sonar Jacoco Listener for JUnit to extract coverage details per 
			test -->
		<sonar-jacoco-listeners.version>3.2</sonar-jacoco-listeners.version>
		<!-- Jacoco output file for UTs -->
		<jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
		<!-- Tells Sonar where the Jacoco coverage result file is located for Unit 
			Tests -->
		<sonar.jacoco.reportPath>${project.build.directory}/coverage-reports/${jacoco.out.ut.file}</sonar.jacoco.reportPath>
		<!-- Jacoco output file for ITs -->
		<jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
		<!-- Tells Sonar where the Jacoco coverage result file is located for Integration 
			Tests -->
		<sonar.jacoco.itReportPath>${project.build.directory}/coverage-reports/${jacoco.out.it.file}</sonar.jacoco.itReportPath>
	</properties>
	<dependencies>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zuul</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-client</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-feign</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-hystrix</artifactId>
		</dependency>

		<dependency>
			<groupId>com.openpojo</groupId>
			<artifactId>openpojo</artifactId>
			<version>0.8.1</version>
			<scope>test</scope>
		</dependency>

		<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-test</artifactId> 
			<scope>test</scope> </dependency> -->

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.everit.json</groupId>
			<artifactId>org.everit.json.schema</artifactId>
			<version>1.4.1</version>
		</dependency>

		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20160810</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.codehaus.sonar-plugins.java</groupId>
			<artifactId>sonar-jacoco-listeners</artifactId>
			<version>${sonar-jacoco-listeners.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- from rm -->
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jmockit</groupId>
			<artifactId>jmockit</artifactId>
			<version>1.8</version>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<build>
		<finalName>push-messaging-service</finalName>
		<plugins>
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId> 
				<version>2.19.1</version> <configuration> Sets the VM argument line used 
				when unit tests are run. <argLine>${surefireArgLine}</argLine> Skips unit 
				tests if the value of skip.unit.tests property is true <skipTests>${skipTests}</skipTests> 
				Excludes integration tests when unit tests are run. <excludes> <exclude>**/*Test.java</exclude> 
				</excludes> </configuration> </plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<compilerArgs>
						<arg>-XDignore.symbol.file</arg>
					</compilerArgs>
					<fork>true</fork>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>${jacoco.agent.ut.arg}</argLine>
					<!-- Specific to generate mapping between tests and covered code -->
					<properties>
						<property>
							<name>listener</name>
							<value>org.sonar.java.jacoco.JUnitListener</value>
						</property>
					</properties>

					<!-- test failure ignore -->
					<testFailureIgnore>true</testFailureIgnore>

					<configuration>
						<!-- Sets the VM argument line used when unit tests are run. -->
						<argLine>${surefireArgLine}</argLine>
						<!-- Skips unit tests if the value of skip.unit.tests property is true -->
						<skipTests>${skipTests}</skipTests>
						<!-- Excludes integration tests when unit tests are run. -->
						<excludes>
							<!-- <exclude>**/*Test.java</exclude> -->
						</excludes>
					</configuration>

				</configuration>
			</plugin>
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-failsafe-plugin</artifactId> 
				<configuration> <argLine>-Xmx1024m -XX:MaxPermSize=256m ${jacoco.agent.it.arg} 
				</argLine> <includes> <include>**/*Test.java</include> </includes> Specific 
				to generate mapping between tests and covered code <properties> <property> 
				<name>listener</name> <value>org.sonar.java.jacoco.JUnitListener</value> 
				</property> </properties> Let's put failsafe reports with surefire to have 
				access to tests failures/success reports in sonar <reportsDirectory>${project.build.directory}/surefire-reports 
				</reportsDirectory> </configuration> </plugin> -->




			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-war-plugin</artifactId> 
				<configuration> <warName>${project.build.finalName}</warName> <outputDirectory>D://wars</outputDirectory> 
				<webResources> <resource> <directory>src/main/resources/jboss</directory> 
				<targetPath>WEB-INF</targetPath> </resource> </webResources> </configuration> 
				</plugin> -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.2.201409121644</version>
				<configuration>
					<excludes>
						<exclude>**/acn/jaxb/*.class</exclude>
						<exclude>**/lib/*</exclude>
						<exclude>**/com/acn/avs/push/messaging/model/*.class</exclude>
						<exclude>**/com/acn/avs/push/messaging/config/*.class</exclude>
						<exclude>**/com/acn/avs/push/messaging/entity/*.class</exclude>
						<exclude>**/com/acn/avs/push/messaging/enums/*.class</exclude>
						<exclude>**/com/acn/avs/push/messaging/exception/handler/*.class</exclude>
						<exclude>**/com/acn/avs/push/messaging/exception/*.class</exclude>
						<exclude>**/com/acn/avs/push/messaging/tenant/*.class</exclude>
					</excludes>
				</configuration>
				<executions>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Surefire plugin is executed. -->
					<execution>
						<id>prepare-ut-agent</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${sonar.jacoco.reportPath}</destFile>
							<propertyName>jacoco.agent.ut.arg</propertyName>
							<append>true</append>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${sonar.jacoco.reportPath}</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.build.directory}/coverage-reports/</outputDirectory>
						</configuration>
					</execution>
					<!-- Prepares a variable, jacoco.agent.it.arg, that contains the info 
						to be passed to the JVM hosting the code being tested. -->
					<execution>
						<id>prepare-it-agent</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${sonar.jacoco.itReportPath}</destFile>
							<propertyName>jacoco.agent.it.arg</propertyName>
							<append>true</append>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
